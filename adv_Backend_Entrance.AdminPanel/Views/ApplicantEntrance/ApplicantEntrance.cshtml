﻿@using adv_Backend_Entrance.Common.Enums
@model ApplicantEntranceViewModel
@{
    ViewBag.Title = "Редактировать профиль";
    Layout = "_Layout";
}

<div id="documentsId" class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 mt-5">
            <div class="card">
                <div class="card-header">
                    Данные паспорта
                </div>
                <div class="card-body" id="passportProfileId">
                    <form id="passportForm" asp-controller="ApplicantEntrance" asp-action="EditPassport" method="post">
                        <input type="hidden" name="userId" asp-for="@Model.Id" id="userId" value="@Model.Id" />
                        <div class="form-group">
                            <label asp-for="PassportModel.PassportNumber" id="PassportNumber" name="PassportNumber" class="form-label">Номер паспорта</label>
                            <input asp-for="PassportModel.PassportNumber" id="PassportNumber" name="PassportNumber" class="form-control" />
                            <span asp-validation-for="PassportModel.PassportNumber" id="PassportNumber" name="PassportNumber" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="PassportModel.BirthPlace" id="BirthPlace" name="BirthPlace" class="form-label">Место рождения</label>
                            <input asp-for="PassportModel.BirthPlace" id="BirthPlace" name="BirthPlace" class="form-control" />
                            <span asp-validation-for="PassportModel.BirthPlace" id="BirthPlace" name="BirthPlace" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="PassportModel.IssuedWhen" id="IssuedWhen" name="IssuedWhen" class="form-label">Дата выдачи</label>
                            <input asp-for="PassportModel.IssuedWhen" id="IssuedWhen" name="IssuedWhen" class="form-control" type="date" />
                            <span asp-validation-for="PassportModel.IssuedWhen" id="IssuedWhen" name="IssuedWhen" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="PassportModel.IssuedWhom" id="IssuedWhom" name="IssuedWhom" class="form-label">Кем выдан</label>
                            <input asp-for="PassportModel.IssuedWhom" id="IssuedWhom" name="IssuedWhom" class="form-control" />
                            <span asp-validation-for="PassportModel.IssuedWhom" id="IssuedWhom" name="IssuedWhom" class="text-danger"></span>
                        </div>
                        <div class="text-center">
                            <button type="button" class="btn btn-primary" id="editPassport">Добавить</button>
                        </div>
                    </form>
                    <div class="mb-3" id="editInfoPassport">
                        <button id="editInfoPassport" onclick="editInfoPassport()" class="btn btn-danger">Изменить</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 mt-5">
            <div class="card">
                <div class="card-header">
                    Документы об образовании
                </div>
                <div class="card-body" id="educationFormId">
                    <form id="educationForm" asp-controller="ApplicantEntrance" asp-action="EditEducationDocument" method="post">
                                                <input type="hidden" name="userId" asp-for="@Model.Id" id="userId" value="@Model.Id" />
                        <div class="form-group">
                            <label asp-for="EducationDocumentModel.EducationLevel" class="form-label"></label>

                            @if (Model.EducationDocumentModel?.EducationLevel != null)
                            {
                                <div class="mb-2">
                                    <strong>Текущий уровень образования:</strong> @Model.EducationDocumentModel.EducationLevel
                                </div>
                            }
                            else
                            {
                                <div class="mb-2">
                                    <strong>Текущий уровень образования:</strong> Не указан
                                </div>
                            }

                            <select asp-for="EducationDocumentModel.EducationLevel" class="form-select" name="EducationLevel">
                                <option value="Bachelor" id="Bachelor" name="Bachelor">Бакалавриат</option>
                                <option value="Magistracy" id="Magistracy" name="Magistracy">Магистратура</option>
                                <option value="Postgraduate" id="Postgraduate" name="Postgraduate">Аспирантура</option>
                                <option value="Specialty" id="Specialty" name="Specialty">Специалитет</option>
                                <option value="BasicGeneralEducation" id="BasicGeneralEducation" name="BasicGeneralEducation">Основное общее образование</option>
                                <option value="SecondaryGeneralEducation" id="SecondaryGeneralEducation" name="SecondaryGeneralEducation">Среднее общее образование</option>
                                <option value="SecondaryVocationalEducation" id="SecondaryVocationalEducation" name="SecondaryVocationalEducation">Среднее профессиональное образование</option>
                            </select>
                            <span asp-validation-for="EducationDocumentModel.EducationLevel" class="text-danger"></span>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Добавить</button>
                        </div>
                    </form>
                    <div class="mb-3" id="editEducationInfoEntrance">
                        <button type="button" id="editEducationInfoEntrance" class="btn btn-danger" onclick="editEducationInfoEntrance()">Изменить</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="programsId" class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-12 mt-5">
            <div class="card">
                <div class="card-header">
                    Программы абитуриента
                </div>
                <div class="card-body" id="programsProfileId">
                    @if (Model.Programs != null && Model.Programs.Any())
                    {
                        foreach (var program in Model.Programs)
                        {
                            <div class="form-group">
                                <label>Название программы: @program.ProgramName</label><br />
                                <label>Факультет: @program.FacultyName</label><br />
                                <label>Приоритет: </label>
                                <input type="number" value="@program.Priority" min="1" max="5" class="form-control program-priority" data-program-id="@program.ProgramId" />
                                <form id="formChange_@program.ProgramId" asp-action="ChangePriority" asp-controller="ApplicantEntrance" method="post">
                                    <input type="hidden" name="userId" value="@Model.Id" />
                                    <input type="hidden" name="ProgramId" value="@program.ProgramId" />
                                    <input type="hidden" name="ApplicationId" value="@program.ApplicationId" />
                                    <input type="hidden" name="Priority" class="priority-input" />
                                </form>
                                <div class="mb-3">
                                    <button onclick="removeProgram('@program.ApplicationId', '@program.ProgramId', '@Model.Id')" class="btn btn-danger">Удалить</button>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p>Нет данных о программах абитуриента.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        function removeProgram(applicationId, programId, userId) {
            $.ajax({
                url: '/ApplicantEntrance/RemoveProgram',
                type: 'POST',
                data: {
                    applicationId: applicationId,
                    programId: programId,
                    userId: userId
                },
                success: function () {
                    alert("Успешно удалена!");
                },
                error: function () {
                    alert("Произошла ошибка при возвращении заявки.");
                }
            });
        }
        function editInfoPassport() {
            $.ajax({
                url: '/ApplicantEntrance/EditInfoPassport',
                type: "POST",
                data: $("#passportForm").serialize(),
                success: function (response) {
                    alert("Паспорт успешно изменен!");
                }
            });
        }
        function editEducationInfoEntrance() {
            $.ajax({
                type: "POST",
                url: '/ApplicantEntrance/EditEducationInfoEntrance',
                data: $("#educationForm").serialize(),
                success: function (response) {
                    $("#educationFormId").html($(response).find("#educationFormId").html());
                    alert("Документ об образовании успешно изменен!");
                }
            });
        }
        $(document).ready(function () {
            $("#editPassport").on("click", function () {
                $.ajax({
                    type: "POST",
                    url: $("#passportForm").attr("action"),
                    data: $("#passportForm").serialize(),
                    success: function (response) {
                        $("#passportProfileId").html($(response).find("#passportProfileId").html());
                    },
                    error: function () {
                        alert("Паспорт успешно добавлен!");
                    }
                });
            });

            $("#educationForm").on("submit", function (event) {
                event.preventDefault();
                $.ajax({
                    type: "POST",
                    url: $(this).attr("action"),
                    data: $(this).serialize(),
                    success: function (response) {
                        $("#educationFormId").html($(response).find("#educationFormId").html());
                    },
                    error: function () {
                        alert("Документ об образовании успешно добавлен!");
                    }
                });
            });

            $("#editInfoPassport").on("click", editInfoPassport);

            $("#editEducationInfoEntrance").on("click", editEducationInfoEntrance);

            $(".program-priority").on("change", function () {
                var programId = $(this).data("program-id");
                var priority = $(this).val();
                $("#formChange_" + programId + " .priority-input").val(priority);

                $.ajax({
                    type: "POST",
                    url: $("#formChange_" + programId).attr("action"),
                    data: $("#formChange_" + programId).serialize(),
                    success: function () {
                        alert("Приоритет успешно изменен!");
                    },
                    error: function () {
                        alert("Произошла ошибка при изменении приоритета.");
                    }
                });
            });
        });
    </script>
}


